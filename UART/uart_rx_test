#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-36-gea26587b5)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 11;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
S_0x58a56f9f5d40 .scope module, "uart_rx_only_tb" "uart_rx_only_tb" 2 3;
 .timescale -9 -11;
P_0x58a56f9f5ed0 .param/l "c_BIT_PERIOD" 0 2 8, +C4<00000000000000011001011100001000>;
P_0x58a56f9f5f10 .param/l "c_CLKS_PER_BIT" 0 2 7, +C4<00000000000000000000010000010010>;
P_0x58a56f9f5f50 .param/l "c_CLOCK_PERIOD_NS" 0 2 6, +C4<00000000000000000000000001100100>;
v0x58a56fa7fe10_0 .var/i "fail_count", 31 0;
v0x58a56fa7ff10_0 .var/i "i", 31 0;
v0x58a56fa7fff0_0 .var/i "pass_count", 31 0;
v0x58a56fa800e0_0 .var "r_clock", 0 0;
v0x58a56fa801b0_0 .var "r_rx_serial", 0 0;
v0x58a56fa802a0 .array "test_bytes", 25 0, 7 0;
v0x58a56fa80340_0 .var/i "test_count", 31 0;
v0x58a56fa80400_0 .net "w_rx_byte", 7 0, L_0x58a56fa203b0;  1 drivers
v0x58a56fa804f0_0 .net "w_rx_dv", 0 0, L_0x58a56fa29c60;  1 drivers
S_0x58a56f9f6090 .scope task, "SEND_BYTE_TO_RX" "SEND_BYTE_TO_RX" 2 39, 2 39 0, S_0x58a56f9f5d40;
 .timescale -9 -11;
v0x58a56fa3b980_0 .var/i "bit_index", 31 0;
v0x58a56fa3bb10_0 .var "byte_to_send", 7 0;
TD_uart_rx_only_tb.SEND_BYTE_TO_RX ;
    %vpi_call 2 43 "$display", "Sending byte 0x%02h (%08b) to RX module", v0x58a56fa3bb10_0, v0x58a56fa3bb10_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x58a56fa801b0_0, 0;
    %vpi_call 2 47 "$display", "  Start bit sent (0)" {0 0 0};
    %delay 10420000, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa3b980_0, 0, 32;
T_0.0 ; Top of for-loop
    %load/vec4 v0x58a56fa3b980_0;
    %cmpi/s 8, 0, 32;
	  %jmp/0xz T_0.1, 5;
    %load/vec4 v0x58a56fa3bb10_0;
    %load/vec4 v0x58a56fa3b980_0;
    %part/s 1;
    %assign/vec4 v0x58a56fa801b0_0, 0;
    %vpi_call 2 53 "$display", "  Data bit %0d sent (%b) - bit value from byte_to_send[%0d]", v0x58a56fa3b980_0, &PV<v0x58a56fa3bb10_0, v0x58a56fa3b980_0, 1>, v0x58a56fa3b980_0 {0 0 0};
    %delay 10420000, 0;
T_0.2 ; for-loop step statement
    %load/vec4 v0x58a56fa3b980_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa3b980_0, 0, 32;
    %jmp T_0.0;
T_0.1 ; for-loop exit label
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x58a56fa801b0_0, 0;
    %vpi_call 2 60 "$display", "  Stop bit sent (1)" {0 0 0};
    %delay 10420000, 0;
    %vpi_call 2 63 "$display", "Complete byte transmission finished\012" {0 0 0};
    %end;
S_0x58a56fa7ea70 .scope task, "TEST_RX_BYTE" "TEST_RX_BYTE" 2 115, 2 115 0, S_0x58a56f9f5d40;
 .timescale -9 -11;
v0x58a56fa3bd20_0 .var "test_byte", 7 0;
E_0x58a56fa30f80 .event posedge, v0x58a56fa556a0_0;
TD_uart_rx_only_tb.TEST_RX_BYTE ;
    %fork t_1, S_0x58a56fa7ea70;
    %fork t_2, S_0x58a56fa7ea70;
    %join;
    %join;
    %jmp t_0;
t_1 ;
    %load/vec4 v0x58a56fa3bd20_0;
    %store/vec4 v0x58a56fa3bb10_0, 0, 8;
    %fork TD_uart_rx_only_tb.SEND_BYTE_TO_RX, S_0x58a56f9f6090;
    %join;
    %end;
t_2 ;
    %load/vec4 v0x58a56fa3bd20_0;
    %store/vec4 v0x58a56fa7fb90_0, 0, 8;
    %fork TD_uart_rx_only_tb.WAIT_AND_VERIFY_RX, S_0x58a56fa7fa00;
    %join;
    %end;
    .scope S_0x58a56fa7ea70;
t_0 ;
    %pushi/vec4 50, 0, 32;
T_1.3 %dup/vec4;
    %cmpi/s 0, 0, 32;
    %jmp/1xz T_1.4, 5;
    %jmp/1 T_1.4, 4;
    %subi 1, 0, 32;
    %wait E_0x58a56fa30f80;
    %jmp T_1.3;
T_1.4 ;
    %pop/vec4 1;
    %end;
S_0x58a56fa7eca0 .scope module, "UART_RX_INST" "uart_rx" 2 30, 3 1 0, S_0x58a56f9f5d40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rx_serial";
    .port_info 2 /OUTPUT 1 "o_rx_dv";
    .port_info 3 /OUTPUT 8 "o_rx_byte";
P_0x58a56fa7ee80 .param/l "CLKS_PER_BIT" 0 3 2, +C4<00000000000000000000010000010010>;
P_0x58a56fa7eec0 .param/l "s_CLEANUP" 1 3 15, C4<100>;
P_0x58a56fa7ef00 .param/l "s_IDLE" 1 3 11, C4<000>;
P_0x58a56fa7ef40 .param/l "s_RX_DATA" 1 3 13, C4<010>;
P_0x58a56fa7ef80 .param/l "s_RX_START" 1 3 12, C4<001>;
P_0x58a56fa7efc0 .param/l "s_RX_STOP" 1 3 14, C4<011>;
L_0x58a56fa29c60 .functor BUFZ 1, v0x58a56fa7f7e0_0, C4<0>, C4<0>, C4<0>;
L_0x58a56fa203b0 .functor BUFZ 8, v0x58a56fa7f580_0, C4<00000000>, C4<00000000>, C4<00000000>;
v0x58a56fa556a0_0 .net "i_clk", 0 0, v0x58a56fa800e0_0;  1 drivers
v0x58a56fa22910_0 .net "i_rx_serial", 0 0, v0x58a56fa801b0_0;  1 drivers
v0x58a56fa257c0_0 .net "o_rx_byte", 7 0, L_0x58a56fa203b0;  alias, 1 drivers
v0x58a56fa51ab0_0 .net "o_rx_dv", 0 0, L_0x58a56fa29c60;  alias, 1 drivers
v0x58a56fa7f370_0 .var "r_bit_count", 3 0;
v0x58a56fa7f4a0_0 .var "r_clk_count", 11 0;
v0x58a56fa7f580_0 .var "r_rx_byte", 7 0;
v0x58a56fa7f660_0 .var "r_rx_data", 0 0;
v0x58a56fa7f720_0 .var "r_rx_data_r", 0 0;
v0x58a56fa7f7e0_0 .var "r_rx_dv", 0 0;
v0x58a56fa7f8a0_0 .var "r_sm_main", 2 0;
S_0x58a56fa7fa00 .scope task, "WAIT_AND_VERIFY_RX" "WAIT_AND_VERIFY_RX" 2 69, 2 69 0, S_0x58a56f9f5d40;
 .timescale -9 -11;
v0x58a56fa7fb90_0 .var "expected", 7 0;
v0x58a56fa7fc90_0 .var/i "timeout_counter", 31 0;
v0x58a56fa7fd70_0 .var "timeout_occurred", 0 0;
TD_uart_rx_only_tb.WAIT_AND_VERIFY_RX ;
    %vpi_call 2 74 "$display", "Waiting for RX to receive byte 0x%02h...", v0x58a56fa7fb90_0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58a56fa7fd70_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa7fc90_0, 0, 32;
T_2.5 ;
    %load/vec4 v0x58a56fa804f0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_2.7, 9;
    %load/vec4 v0x58a56fa7fd70_0;
    %nor/r;
    %and;
T_2.7;
    %flag_set/vec4 8;
    %jmp/0xz T_2.6, 8;
    %wait E_0x58a56fa30f80;
    %load/vec4 v0x58a56fa7fc90_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7fc90_0, 0, 32;
    %load/vec4 v0x58a56fa7fc90_0;
    %cmpi/s 200000, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_2.8, 5;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58a56fa7fd70_0, 0, 1;
T_2.8 ;
    %jmp T_2.5;
T_2.6 ;
    %load/vec4 v0x58a56fa7fd70_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.10, 8;
    %vpi_call 2 88 "$display", "ERROR: Timeout waiting for RX data valid signal" {0 0 0};
    %load/vec4 v0x58a56fa7fe10_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7fe10_0, 0, 32;
    %load/vec4 v0x58a56fa80340_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa80340_0, 0, 32;
    %jmp T_2.11;
T_2.10 ;
    %vpi_call 2 94 "$display", "RX data valid asserted! Received: 0x%02h (%08b)", v0x58a56fa80400_0, v0x58a56fa80400_0 {0 0 0};
    %load/vec4 v0x58a56fa80340_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa80340_0, 0, 32;
    %load/vec4 v0x58a56fa80400_0;
    %load/vec4 v0x58a56fa7fb90_0;
    %cmp/e;
    %jmp/0xz  T_2.12, 4;
    %vpi_call 2 98 "$display", "PASS: RX correctly received 0x%02h", v0x58a56fa80400_0 {0 0 0};
    %load/vec4 v0x58a56fa7fff0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7fff0_0, 0, 32;
    %jmp T_2.13;
T_2.12 ;
    %vpi_call 2 101 "$display", "FAIL: RX received 0x%02h, expected 0x%02h", v0x58a56fa80400_0, v0x58a56fa7fb90_0 {0 0 0};
    %load/vec4 v0x58a56fa7fe10_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7fe10_0, 0, 32;
T_2.13 ;
T_2.14 ;
    %load/vec4 v0x58a56fa804f0_0;
    %flag_set/vec4 8;
    %jmp/0xz T_2.15, 8;
    %wait E_0x58a56fa30f80;
    %jmp T_2.14;
T_2.15 ;
    %vpi_call 2 109 "$display", "RX data valid deasserted\012" {0 0 0};
T_2.11 ;
    %end;
    .scope S_0x58a56fa7eca0;
T_3 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x58a56fa7f8a0_0, 0, 3;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x58a56fa7f4a0_0, 0, 12;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x58a56fa7f370_0, 0, 4;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x58a56fa7f580_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58a56fa7f7e0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58a56fa7f720_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58a56fa7f660_0, 0, 1;
    %end;
    .thread T_3;
    .scope S_0x58a56fa7eca0;
T_4 ;
    %wait E_0x58a56fa30f80;
    %load/vec4 v0x58a56fa22910_0;
    %assign/vec4 v0x58a56fa7f720_0, 0;
    %load/vec4 v0x58a56fa7f720_0;
    %assign/vec4 v0x58a56fa7f660_0, 0;
    %load/vec4 v0x58a56fa7f8a0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_4.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_4.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_4.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 3;
    %cmp/u;
    %jmp/1 T_4.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 3;
    %cmp/u;
    %jmp/1 T_4.4, 6;
    %jmp T_4.5;
T_4.0 ;
    %load/vec4 v0x58a56fa7f660_0;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_4.6, 4;
    %vpi_call 3 55 "$display", "State : Idle, start bit detected" {0 0 0};
    %pushi/vec4 1, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %jmp T_4.7;
T_4.6 ;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
T_4.7 ;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x58a56fa7f370_0, 0;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x58a56fa7f580_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x58a56fa7f7e0_0, 0;
    %jmp T_4.5;
T_4.1 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %cvt/rv;
    %pushi/real 1090519040, 4075; load=520.000
    %cmp/wr;
    %flag_get/vec4 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.8, 8;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 2, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %jmp T_4.9;
T_4.8 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %addi 1, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 1, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
T_4.9 ;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x58a56fa7f370_0, 0;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x58a56fa7f580_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x58a56fa7f7e0_0, 0;
    %jmp T_4.5;
T_4.2 ;
    %load/vec4 v0x58a56fa7f370_0;
    %pad/u 32;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_4.10, 4;
    %pushi/vec4 3, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x58a56fa7f370_0, 0;
    %vpi_call 3 87 "$display", "State : Data, all bits received, going to Stop" {0 0 0};
    %jmp T_4.11;
T_4.10 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %pad/u 32;
    %cmpi/e 1041, 0, 32;
    %jmp/0xz  T_4.12, 4;
    %pushi/vec4 2, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %load/vec4 v0x58a56fa7f660_0;
    %ix/load 5, 0, 0;
    %ix/getv 4, v0x58a56fa7f370_0;
    %assign/vec4/off/d v0x58a56fa7f580_0, 4, 5;
    %load/vec4 v0x58a56fa7f370_0;
    %addi 1, 0, 4;
    %assign/vec4 v0x58a56fa7f370_0, 0;
    %pushi/vec4 2, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %vpi_call 3 96 "$display", "State : Data, 1 bit received" {0 0 0};
    %jmp T_4.13;
T_4.12 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %addi 1, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 2, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
T_4.13 ;
T_4.11 ;
    %jmp T_4.5;
T_4.3 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %pad/u 32;
    %cmpi/e 1041, 0, 32;
    %jmp/0xz  T_4.14, 4;
    %load/vec4 v0x58a56fa7f660_0;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_4.16, 4;
    %vpi_call 3 111 "$display", "State : STOP, valid stop bit, going to Cleanup." {0 0 0};
    %pushi/vec4 4, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %jmp T_4.17;
T_4.16 ;
    %vpi_call 3 116 "$display", "State : Stop , invalid stop bit, going to Idle." {0 0 0};
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x58a56fa7f580_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x58a56fa7f370_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x58a56fa7f7e0_0, 0;
T_4.17 ;
    %jmp T_4.15;
T_4.14 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %addi 1, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 3, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
T_4.15 ;
    %jmp T_4.5;
T_4.4 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %pad/u 32;
    %cmpi/e 520, 0, 32;
    %jmp/0xz  T_4.18, 4;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x58a56fa7f7e0_0, 0;
    %jmp T_4.19;
T_4.18 ;
    %load/vec4 v0x58a56fa7f4a0_0;
    %addi 1, 0, 12;
    %assign/vec4 v0x58a56fa7f4a0_0, 0;
    %pushi/vec4 4, 0, 3;
    %assign/vec4 v0x58a56fa7f8a0_0, 0;
T_4.19 ;
    %jmp T_4.5;
T_4.5 ;
    %pop/vec4 1;
    %jmp T_4;
    .thread T_4;
    .scope S_0x58a56f9f5d40;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x58a56fa800e0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x58a56fa801b0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa80340_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa7fff0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa7fe10_0, 0, 32;
    %end;
    .thread T_5;
    .scope S_0x58a56f9f5d40;
T_6 ;
    %delay 5000, 0;
    %load/vec4 v0x58a56fa800e0_0;
    %nor/r;
    %assign/vec4 v0x58a56fa800e0_0, 0;
    %jmp T_6;
    .thread T_6;
    .scope S_0x58a56f9f5d40;
T_7 ;
    %vpi_call 2 132 "$display", "Starting UART RX Only Tests..." {0 0 0};
    %vpi_call 2 133 "$dumpfile", "uart_rx_tb.vcd" {0 0 0};
    %vpi_call 2 134 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x58a56f9f5d40 {0 0 0};
    %pushi/vec4 0, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 255, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 85, 0, 8;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 170, 0, 8;
    %ix/load 4, 3, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 15, 0, 8;
    %ix/load 4, 4, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 240, 0, 8;
    %ix/load 4, 5, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 60, 0, 8;
    %ix/load 4, 6, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 195, 0, 8;
    %ix/load 4, 7, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 1, 0, 8;
    %ix/load 4, 8, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 128, 0, 8;
    %ix/load 4, 9, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 127, 0, 8;
    %ix/load 4, 10, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 254, 0, 8;
    %ix/load 4, 11, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 51, 0, 8;
    %ix/load 4, 12, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 204, 0, 8;
    %ix/load 4, 13, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 90, 0, 8;
    %ix/load 4, 14, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 165, 0, 8;
    %ix/load 4, 15, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x58a56fa802a0, 4, 0;
    %pushi/vec4 20, 0, 32;
T_7.0 %dup/vec4;
    %cmpi/s 0, 0, 32;
    %jmp/1xz T_7.1, 5;
    %jmp/1 T_7.1, 4;
    %subi 1, 0, 32;
    %wait E_0x58a56fa30f80;
    %jmp T_7.0;
T_7.1 ;
    %pop/vec4 1;
    %vpi_call 2 158 "$display", "\012=== Testing UART Receiver Basic Functionality ===" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa7ff10_0, 0, 32;
T_7.2 ; Top of for-loop
    %load/vec4 v0x58a56fa7ff10_0;
    %cmpi/s 16, 0, 32;
	  %jmp/0xz T_7.3, 5;
    %load/vec4 v0x58a56fa7ff10_0;
    %addi 1, 0, 32;
    %vpi_call 2 160 "$display", "--- Test %0d of 16 ---", S<0,vec4,s32> {1 0 0};
    %ix/getv/s 4, v0x58a56fa7ff10_0;
    %load/vec4a v0x58a56fa802a0, 4;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
T_7.4 ; for-loop step statement
    %load/vec4 v0x58a56fa7ff10_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7ff10_0, 0, 32;
    %jmp T_7.2;
T_7.3 ; for-loop exit label
    %vpi_call 2 165 "$display", "\012=== Testing Edge Cases ===" {0 0 0};
    %vpi_call 2 168 "$display", "Testing back-to-back byte reception..." {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x58a56fa7ff10_0, 0, 32;
T_7.5 ; Top of for-loop
    %load/vec4 v0x58a56fa7ff10_0;
    %cmpi/s 3, 0, 32;
	  %jmp/0xz T_7.6, 5;
    %pushi/vec4 160, 0, 32;
    %load/vec4 v0x58a56fa7ff10_0;
    %add;
    %pad/u 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
T_7.7 ; for-loop step statement
    %load/vec4 v0x58a56fa7ff10_0;
    %addi 1, 0, 32;
    %store/vec4 v0x58a56fa7ff10_0, 0, 32;
    %jmp T_7.5;
T_7.6 ; for-loop exit label
    %vpi_call 2 174 "$display", "Testing common ASCII characters..." {0 0 0};
    %pushi/vec4 65, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 66, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 48, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 57, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 32, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 13, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %pushi/vec4 10, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %vpi_call 2 184 "$display", "Testing with extended idle periods..." {0 0 0};
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x58a56fa801b0_0, 0;
    %delay 104200000, 0;
    %pushi/vec4 150, 0, 8;
    %store/vec4 v0x58a56fa3bd20_0, 0, 8;
    %fork TD_uart_rx_only_tb.TEST_RX_BYTE, S_0x58a56fa7ea70;
    %join;
    %vpi_call 2 190 "$display", "\012=== RX Test Results ===" {0 0 0};
    %vpi_call 2 191 "$display", "Total Tests: %0d", v0x58a56fa80340_0 {0 0 0};
    %vpi_call 2 192 "$display", "Passed: %0d", v0x58a56fa7fff0_0 {0 0 0};
    %vpi_call 2 193 "$display", "Failed: %0d", v0x58a56fa7fe10_0 {0 0 0};
    %load/vec4 v0x58a56fa7fe10_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_7.8, 4;
    %vpi_call 2 196 "$display", "*** ALL RX TESTS PASSED! ***" {0 0 0};
    %vpi_call 2 197 "$display", "Your UART receiver implementation is working correctly!" {0 0 0};
    %jmp T_7.9;
T_7.8 ;
    %vpi_call 2 199 "$display", "*** %0d RX TESTS FAILED ***", v0x58a56fa7fe10_0 {0 0 0};
    %vpi_call 2 200 "$display", "Check your receiver implementation:" {0 0 0};
    %vpi_call 2 201 "$display", "- Verify start bit detection" {0 0 0};
    %vpi_call 2 202 "$display", "- Check baud rate timing" {0 0 0};
    %vpi_call 2 203 "$display", "- Ensure LSB-first data assembly" {0 0 0};
    %vpi_call 2 204 "$display", "- Verify stop bit detection" {0 0 0};
    %vpi_call 2 205 "$display", "- Check data valid signal timing" {0 0 0};
T_7.9 ;
    %vpi_call 2 208 "$finish" {0 0 0};
    %end;
    .thread T_7;
    .scope S_0x58a56f9f5d40;
T_8 ;
    %delay 4000000000, 0;
    %vpi_call 2 214 "$display", "ERROR: Test timeout! Check if RX is stuck in a state." {0 0 0};
    %vpi_call 2 215 "$finish" {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x58a56f9f5d40;
T_9 ;
    %vpi_call 2 220 "$monitor", "Time=%0t: rx_serial=%b, rx_dv=%b, rx_byte=0x%02h", $time, v0x58a56fa801b0_0, v0x58a56fa804f0_0, v0x58a56fa80400_0 {0 0 0};
    %end;
    .thread T_9;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "uart_rx_tb.v";
    "uart_rx.v";
